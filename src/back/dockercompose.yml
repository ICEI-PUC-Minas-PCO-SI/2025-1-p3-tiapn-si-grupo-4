services:
  db:
    image: mysql:latest
    container_name: db
    ports:
      - ${DATABASE_PORT:-3306}:3306
    volumes:
      - ./.db/service-core-db:/var/lib/mysql
    networks:
      - service-core-backend
    healthcheck: 
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_PASSWORD}
      MYSQL_DATABASE: ${DATABASE_NAME}
      MYSQL_USER: ${DATABASE_USER}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
    

  migrations:
    
    build:
      context: .
      dockerfile: Dockerfile.migrations
    container_name: migrations
    depends_on:
      db:
        condition: service_healthy 
    environment:
      - DATABASE_HOST="db"
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - service-core-backend

  app:
    build: .
    container_name: app
    ports:
      - "3000:3000"
    depends_on:
      migrations:
        condition: service_completed_successfully 
    environment:
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
    networks:
      - service-core-backend

  mysqladmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    container_name: mysqladmin
    depends_on:
      db:
        condition: service_healthy 
    ports:
      - 8081:80
    networks:
      - service-core-backend
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DATABASE_USER}
      PMA_PASSWORD: ${DATABASE_PASSWORD}

networks:
  service-core-backend:
    driver: "bridge"

volumes:
  mysql_data:
    driver: local